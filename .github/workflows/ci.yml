name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  id-token: write
  actions: read
  security-events: write

env:
  PYTHONUNBUFFERED: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

jobs:
  checks:
    name: Checks (python ${{ matrix.python-version }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/dev.txt
      - name: Bootstrap environment
        run: make bootstrap
      - name: Run checks
        run: make check
      - name: Generate SBOM
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11' }}
        run: ./scripts/sbom
      - name: Upload SBOM
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11' }}
        uses: actions/upload-artifact@v4
        with:
          name: sbom-linux-311
          path: sbom
      - name: Upload coverage report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
          path: htmlcov

  security:
    name: Security and License Gates
    runs-on: ubuntu-latest
    needs: checks
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/dev.txt
      - name: Bootstrap environment
        run: make bootstrap
      - name: Security scan
        run: ./scripts/security-scan
      - name: License scan
        run: ./scripts/license-scan
      - name: Secret scan
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --report-format json --report-path gitleaks-report.json
      - name: Upload security artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: security-artifacts
          path: |
            gitleaks-report.json
            reports/license-summary.json
            reports/pip-licenses.json

  supply-chain:
    name: Supply Chain
    runs-on: ubuntu-latest
    needs:
      - checks
    steps:
      - uses: actions/checkout@v4
      - name: Download SBOM
        uses: actions/download-artifact@v4
        with:
          name: sbom-linux-311
          path: artifacts/sbom
      - name: Verify SBOM availability
        run: |
          if [ ! -f artifacts/sbom/sbom.json ]; then
            echo "SBOM artifact missing - ensure checks job uploaded it" >&2
            exit 1
          fi
      - uses: sigstore/cosign-installer@v3.5.0
      - name: Sign SBOM
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: cosign sign-blob --yes --output-signature artifacts/sbom/sbom.sig artifacts/sbom/sbom.json
      - name: Upload signed SBOM
        uses: actions/upload-artifact@v4
        with:
          name: signed-sbom
          path: |
            artifacts/sbom/sbom.json
            artifacts/sbom/sbom.sig
            sbom
